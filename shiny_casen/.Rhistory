data_code <- ab[  , c("seg", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code  <-  data_code  %>% mutate(codigo = case_when(as.integer(seg / 1000) > 0 ~ as.integer(seg / 1000), as.integer(seg / 10000) == 141 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 142 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 101 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 102 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 103 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 104 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 111 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 112 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 113 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 114 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 121 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 122 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 123 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 124 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 131 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 132 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 133 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 134 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 135 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 136 ~ as.integer(seg / 100)
))
data_code <- subset( data_code, select = -seg )
data_code
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
d
df = merge( x = d, y = data_code, by = "a", all.x = TRUE)
# df
# return(tabla)
r0 <- data_code[4,1]
r0
r1 <- d[6,1]
r1 <- as.character(r1)
r1
r1 <- d[5,1]
r1 <- as.character(r1)
r1
if(r0 != r1){
print("los registros son diferentes")
}
runApp('casen_rojo.R')
ab <- dataset2013
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
cross_tab = table(a, b, c, d)
#
tabla <- as.data.frame(cross_tab)
ab <- data_codigos_comunales
data_code <- ab[  , c("seg", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code  <-  data_code  %>% mutate(codigo = case_when(as.integer(seg / 1000) > 0 ~ as.integer(seg / 1000), as.integer(seg / 10000) == 141 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 142 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 101 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 102 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 103 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 104 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 111 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 112 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 113 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 114 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 121 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 122 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 123 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 124 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 131 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 132 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 133 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 134 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 135 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 136 ~ as.integer(seg / 100)
))
data_code <- subset( data_code, select = -seg )
data_code
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
d
df = merge( x = d, y = data_code, by = "a", all.x = TRUE)
# df
# return(tabla)
df
runApp('casen_rojo.R')
l <- colnames(dataset2013)
l
l <- colnames(data_code)
l
runApp('casen_rojo.R')
s <- dataset2015[,736]
s
runApp('casen_rojo.R')
library(shiny); runApp('casen_rojo.R')
suppressWarnings(library(RODBC))
library(ggplot2)
library(ggpubr)
library(markdown)
library(shiny)
library(shinythemes)
library(tidyverse)
library(magrittr)
library(lubridate)
library(plotly)
library(xts)
library(dygraphs)
library(kableExtra)
library(knitr)
library("readxl")
library(rsconnect)
library(dplyr)
library(summarytools)
library(epiDisplay)
#library(leaflet)
library(haven)
library(epiDisplay)
library("readxl")
library(expss)
library(hrbrthemes)
library(viridis)
library(viridisLite)
library(DescTools)
library(roperators)
library(shinycssloaders)
library(writexl)
library(labelled)
library(tidyverse)
library(haven)
library(readr)
library(sjmisc)
library(WriteXLS)
library(readstata13)
dataset2013 <- readRDS("dataset2013.rds")
# a <- input$ptabla2013_primeravx
#     b <- input$ptabla2013_segundavx
#     c <- input$ptabla2013_terceravx
#     d <- input$ptabla2013_cuartavx
#
ab <- dataset2013
#
#     aa <- ab[,a]
#     bb <- ab[,b]
#     cc <- ab[,c]
#     dd <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
# return(d)
data_code <- ab[  , c("folio", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 10000000000) == 0 ~ as.integer(folio/ 10000000)
, as.integer(folio / 10000000000) <17 ~ as.integer(folio / 10000000)
))
data_cod <- subset( data_code, select = -folio )
data_cod[171,2]<-16101
data_cod[172,2]<-16102
data_cod[173,2]<-16202
data_cod[174,2]<-16203
data_cod[175,2]<-16302
data_cod[176,2]<-16103
data_cod[177,2]<-16104
data_cod[178,2]<-16204
data_cod[179,2]<-16303
data_cod[180,2]<-16105
data_cod[181,2]<-16106
data_cod[182,2]<-16205
data_cod[183,2]<-16107
data_cod[184,2]<-16201
data_cod[185,2]<-16206
data_cod[186,2]<-16301
data_cod[187,2]<-16304
data_cod[188,2]<-16108
data_cod[189,2]<-16305
data_cod[190,2]<-16207
data_cod[191,2]<-16109
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
df
library(shiny); runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
dataset2015 <- readRDS("dataset2015.rds")
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
dataset2015 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2015
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 10000000000) == 0 ~ as.integer(folio/ 10000000)
, as.integer(folio / 10000000000) <17 ~ as.integer(folio / 10000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
df
dataset2015 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2015
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 10000000000) == 0 ~ as.integer(folio/ 10000000)
, as.integer(folio / 10000000000) <17 ~ as.integer(folio / 10000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
df
dataset2015 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2015
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 1000000000000) == 0 ~ as.integer(folio/ 1000000000)
, as.integer(folio / 1000000000000) <17 ~ as.integer(folio / 1000000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
df
dataset2015 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2015
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 1000000000000) == 0 ~ as.integer(folio/ 100000000)
, as.integer(folio / 1000000000000) <17 ~ as.integer(folio / 100000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
df
dataset2015 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2015
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 1000000000000) == 0 ~ as.integer(folio/ 100000000)
, as.integer(folio / 1000000000000) <17 ~ as.integer(folio / 100000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
write.csv(df,"codigoscomunales2017.csv", row.names = FALSE)
dataset2017 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2017
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 1000000000000) == 0 ~ as.integer(folio/ 100000000)
, as.integer(folio / 1000000000000) <17 ~ as.integer(folio / 100000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
write.csv(data_cod,"codigoscomunales2017.csv", row.names = FALSE)
dataset2017 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
dataset2017 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2017
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 1000000000000) == 0 ~ as.integer(folio/ 100000000)
, as.integer(folio / 1000000000000) <17 ~ as.integer(folio / 100000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
# write.csv(data_cod,"codigoscomunales2017.csv", row.names = FALSE)
df
dataset2017 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2017
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 1000000000000) == 0 ~ as.integer(folio/ 100000000)
, as.integer(folio / 1000000000000) <17 ~ as.integer(folio / 100000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
# write.csv(data_cod,"codigoscomunales2017.csv", row.names = FALSE)
data_cod
dataset2017 <- readRDS("dataset2017.rds")
# a <- input$ptabla2013_primeravx
# b <- input$ptabla2013_segundavx
# c <- input$ptabla2013_terceravx
# d <- input$ptabla2013_cuartavx
ab <- dataset2017
# a <- ab[,a]
# b <- ab[,b]
# c <- ab[,c]
# d <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2017"
data_code <- ab[  , c("folio", "comuna")]
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 1000000000000) == 0 ~ as.integer(folio/ 100000000)
, as.integer(folio / 1000000000000) <17 ~ as.integer(folio / 100000000)
))
data_cod <- subset( data_code, select = -folio )
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
write.csv(data_cod,"codigoscomunales2017.csv", row.names = FALSE)
data_cod
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
runApp('casen_rojo.R')
dataset2006  <- readRDS("dataset2006.rds")
d <- input$comuna
