d <- ab$ecivil
cross_tab = table(a, b, c, d)
# cross_tab
#
tabla <- as.data.frame(cross_tab)
# #ab <- dataset2006_react()
ab <- data_codigos_comunales
#
#
data_code <- ab[  , c("seg", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
# data_code
#
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code  <-  data_code  %>% mutate(codigo = case_when(as.integer(seg / 1000) > 0 ~ as.integer(seg / 1000), as.integer(seg / 10000) == 141 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 142 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 101 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 102 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 103 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 104 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 111 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 112 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 113 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 114 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 121 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 122 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 123 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 124 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 131 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 132 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 133 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 134 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 135 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 136 ~ as.integer(seg / 100)
))
data_code <- subset( data_code, select = -seg )
#
#
#
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
# d
# #df1 = merge( x = d1, y = data_code1, by = "a")
df = merge( x = d, y = data_code, by = "a", all.x = TRUE)
df
# return(tabla)
runApp('casen_rojo.R')
r0 <- data_code[22,1]
typeof(r0)
r0
r1 <- d[1,1]
typeof(r1)
r1
if(r0 != r1){
print("los registros son iguales")
}
runApp('casen_rojo.R')
r0 <- data_code[22,1]
typeof(r0)
r0 <- strtoi(r0)
r0 <- data_code[22,1]
typeof(r0)
r0 <- strtoi(r0)
r0
r0 <- data_code[22,1]
typeof(r0)
r0
r1 <- d[1,1]
typeof(r1)
r1<-toString(r1)
typeof(r1)
r1
r1 <- d[1,1]
typeof(r1)
r1<-itostr(r1)
install.packages("itostr")
library(ggplot2)
library(ggpubr)
library(markdown)
library(shiny)
library(shinythemes)
library(tidyverse)
library(magrittr)
library(lubridate)
library(plotly)
library(xts)
library(dygraphs)
library(kableExtra)
library(knitr)
library("readxl")
library(rsconnect)
library(dplyr)
library(summarytools)
library(epiDisplay)
#library(leaflet)
library(haven)
library(epiDisplay)
library("readxl")
library(expss)
library(hrbrthemes)
library(viridis)
library(viridisLite)
library(DescTools)
library(roperators)
library(shinycssloaders)
library(writexl)
library(vroom)
library(shinyWidgets)
library(itostr)
install.packages("BBmisc")
library(ggplot2)
library(ggpubr)
library(markdown)
library(shiny)
library(shinythemes)
library(tidyverse)
library(magrittr)
library(lubridate)
library(plotly)
library(xts)
library(dygraphs)
library(kableExtra)
library(knitr)
library("readxl")
library(rsconnect)
library(dplyr)
library(summarytools)
library(epiDisplay)
#library(leaflet)
library(haven)
library(epiDisplay)
library("readxl")
library(expss)
library(hrbrthemes)
library(viridis)
library(viridisLite)
library(DescTools)
library(roperators)
library(shinycssloaders)
library(writexl)
library(vroom)
library(shinyWidgets)
library(BBmisc)
oldw <- getOption("warn")
options(warn = -1)
dataset2006  <- readRDS("dataset2006.rds")
data_codigos_comunales <- dataset2006
#dataset2006  <- dataset2006[1:100,]
dataset2006_col <- colnames(dataset2006)
data_2006_1_2_colnames <- colnames(dataset2006_col[2])
dataset06  <- readRDS("dataset06.rds")
dataset2009  <- readRDS("dataset2009.rds")
dataset2009  <- dataset2009[1:100,]
dataset2009_col <- colnames(dataset2009)
# extraccion de las cabeceras para la carga de los filtros por categoria
data_2009_3_5 <- dataset2009[, c(4,6)]
data_2009_1_2_colnames <- colnames(data_2009_3_5)
data_2009_5_348 <- dataset2009[, 7:348]
data_2009_5_348_colnames <- colnames(data_2009_5_348)
dataset2011  <- readRDS("dataset2011.rds")
dataset2011  <- dataset2011[1:100,]
dataset2011_col <- colnames(dataset2011)
# extraccion de las cabeceras para la carga de los filtros por categoria
data_2011_3_5 <- dataset2011[, 1:6]
data_2011_1_2_colnames <- colnames(data_2011_3_5)
data_2011_5_348 <- dataset2011[, 7:348]
data_2011_5_348_colnames <- colnames(data_2011_5_348)
dataset2013  <- readRDS("dataset2013.rds")
# dataset2013  <- dataset2013[1:100,]
dataset2013_col <- colnames(dataset2013)
# extraccion de las cabeceras para la carga de los filtros por categoria
data_2013_3_5 <- dataset2013[, c(4,6)]
data_2013_1_2_colnames <- colnames(data_2013_3_5)
data_2013_5_348 <- dataset2013[, 7:348]
data_2013_5_348_colnames <- colnames(data_2013_5_348)
dataset2015  <- readRDS("dataset2015.rds")
dataset2015  <- dataset2015[1:100,]
dataset2015_col <- colnames(dataset2015)
# extraccion de las cabeceras para la carga de los filtros por categoria
data_2015_3_5 <- dataset2015[, c(4,6)]
data_2015_1_2_colnames <- colnames(data_2015_3_5)
data_2015_5_348 <- dataset2015[, 7:348]
data_2015_5_348_colnames <- colnames(data_2015_5_348)
##################   2017 ##############################
dataset2017  <- readRDS("dataset2017.rds")
dataset2017  <- dataset2017[1:100,]
dataset2017_col <- colnames(dataset2017)
r1 <- d[1,1]
typeof(r1)
r1<-itostr(r1)
r1 <- d[1,1]
typeof(r1)
r1 <- as.character(r1)
r1
r1 <- d[1,1]
r1 <- as.character(r1)
typeof(r1)
r1
ab <- dataset2013
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
cross_tab = table(a, b, c, d)
#
tabla <- as.data.frame(cross_tab)
ab <- data_codigos_comunales
data_code <- ab[  , c("seg", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code  <-  data_code  %>% mutate(codigo = case_when(as.integer(seg / 1000) > 0 ~ as.integer(seg / 1000), as.integer(seg / 10000) == 141 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 142 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 101 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 102 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 103 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 104 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 111 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 112 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 113 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 114 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 121 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 122 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 123 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 124 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 131 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 132 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 133 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 134 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 135 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 136 ~ as.integer(seg / 100)
))
data_code <- subset( data_code, select = -seg )
data_code
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
d
df = merge( x = d, y = data_code, by = "a", all.x = TRUE)
# df
# return(tabla)
ab <- dataset2013
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
cross_tab = table(a, b, c, d)
#
tabla <- as.data.frame(cross_tab)
ab <- data_codigos_comunales
data_code <- ab[  , c("seg", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code  <-  data_code  %>% mutate(codigo = case_when(as.integer(seg / 1000) > 0 ~ as.integer(seg / 1000), as.integer(seg / 10000) == 141 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 142 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 101 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 102 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 103 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 104 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 111 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 112 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 113 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 114 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 121 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 122 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 123 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 124 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 131 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 132 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 133 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 134 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 135 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 136 ~ as.integer(seg / 100)
))
data_code <- subset( data_code, select = -seg )
data_code
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
d
df = merge( x = d, y = data_code, by = "a", all.x = TRUE)
# df
# return(tabla)
ab <- dataset2013
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
cross_tab = table(a, b, c, d)
#
tabla <- as.data.frame(cross_tab)
ab <- data_codigos_comunales
data_code <- ab[  , c("seg", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code  <-  data_code  %>% mutate(codigo = case_when(as.integer(seg / 1000) > 0 ~ as.integer(seg / 1000), as.integer(seg / 10000) == 141 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 142 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 101 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 102 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 103 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 104 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 111 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 112 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 113 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 114 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 121 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 122 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 123 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 124 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 131 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 132 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 133 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 134 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 135 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 136 ~ as.integer(seg / 100)
))
data_code <- subset( data_code, select = -seg )
data_code
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
d
df = merge( x = d, y = data_code, by = "a", all.x = TRUE)
# df
# return(tabla)
r0 <- data_code[4,1]
r0
r1 <- d[6,1]
r1 <- as.character(r1)
r1
r1 <- d[5,1]
r1 <- as.character(r1)
r1
if(r0 != r1){
print("los registros son diferentes")
}
runApp('casen_rojo.R')
ab <- dataset2013
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
cross_tab = table(a, b, c, d)
#
tabla <- as.data.frame(cross_tab)
ab <- data_codigos_comunales
data_code <- ab[  , c("seg", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code  <-  data_code  %>% mutate(codigo = case_when(as.integer(seg / 1000) > 0 ~ as.integer(seg / 1000), as.integer(seg / 10000) == 141 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 142 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 101 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 102 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 103 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 104 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 111 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 112 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 113 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 114 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 121 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 122 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 123 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 124 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 131 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 132 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 133 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 134 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 135 ~ as.integer(seg / 100)
, as.integer(seg / 10000) == 136 ~ as.integer(seg / 100)
))
data_code <- subset( data_code, select = -seg )
data_code
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
d
df = merge( x = d, y = data_code, by = "a", all.x = TRUE)
# df
# return(tabla)
df
runApp('casen_rojo.R')
l <- colnames(dataset2013)
l
l <- colnames(data_code)
l
runApp('casen_rojo.R')
s <- dataset2015[,736]
s
runApp('casen_rojo.R')
library(shiny); runApp('casen_rojo.R')
suppressWarnings(library(RODBC))
library(ggplot2)
library(ggpubr)
library(markdown)
library(shiny)
library(shinythemes)
library(tidyverse)
library(magrittr)
library(lubridate)
library(plotly)
library(xts)
library(dygraphs)
library(kableExtra)
library(knitr)
library("readxl")
library(rsconnect)
library(dplyr)
library(summarytools)
library(epiDisplay)
#library(leaflet)
library(haven)
library(epiDisplay)
library("readxl")
library(expss)
library(hrbrthemes)
library(viridis)
library(viridisLite)
library(DescTools)
library(roperators)
library(shinycssloaders)
library(writexl)
library(labelled)
library(tidyverse)
library(haven)
library(readr)
library(sjmisc)
library(WriteXLS)
library(readstata13)
dataset2013 <- readRDS("dataset2013.rds")
# a <- input$ptabla2013_primeravx
#     b <- input$ptabla2013_segundavx
#     c <- input$ptabla2013_terceravx
#     d <- input$ptabla2013_cuartavx
#
ab <- dataset2013
#
#     aa <- ab[,a]
#     bb <- ab[,b]
#     cc <- ab[,c]
#     dd <- ab[,d]
a <- ab$comuna
b <- ab$e1
c <- ab$sexo
d <- ab$ecivil
# cross_tab = table(a, b, c, d)
cross_tab =  xtabs(ab$expc ~ unlist(a) + unlist(b)+unlist(c)+unlist(d),aggregate(ab$expc ~ unlist(a)+unlist(b)+unlist(c)+unlist(d),ab,mean))
tabla <- as.data.frame(cross_tab)
d <-tabla[!(tabla$Freq == 0),]
d$anio <- "2013"
# return(d)
data_code <- ab[  , c("folio", "comuna")]
#
names(data_code)[2] <- "a"
data_code <- distinct(data_code , a, .keep_all = TRUE)
#
data_code <- data_code %>% mutate(a = str_squish(a))
#
# # https://stackoverflow.com/questions/22337394/dplyr-mutate-with-conditional-values/22337459
#
data_code <- data_code %>% mutate(codigo = case_when(as.integer(folio / 10000000000) == 0 ~ as.integer(folio/ 10000000)
, as.integer(folio / 10000000000) <17 ~ as.integer(folio / 10000000)
))
data_cod <- subset( data_code, select = -folio )
data_cod[171,2]<-16101
data_cod[172,2]<-16102
data_cod[173,2]<-16202
data_cod[174,2]<-16203
data_cod[175,2]<-16302
data_cod[176,2]<-16103
data_cod[177,2]<-16104
data_cod[178,2]<-16204
data_cod[179,2]<-16303
data_cod[180,2]<-16105
data_cod[181,2]<-16106
data_cod[182,2]<-16205
data_cod[183,2]<-16107
data_cod[184,2]<-16201
data_cod[185,2]<-16206
data_cod[186,2]<-16301
data_cod[187,2]<-16304
data_cod[188,2]<-16108
data_cod[189,2]<-16305
data_cod[190,2]<-16207
data_cod[191,2]<-16109
names(d)[1] <- "a"
df = merge( x = d, y = data_cod, by = "a", all.x = TRUE)
df
